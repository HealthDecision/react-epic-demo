{"version":3,"sources":["modules/fhir-data.js","credentials.js","lib/oauth.js","modules/fhir-auth.js","components/Grid.js","components/Redirect.js","components/Launch.js","components/NotFound.js","components/App.js","reducers.js","configureStore.js","serviceWorker.js","index.js"],"names":["FHIR_GET_DATA","FHIR_GET_DATA_FAILED","FHIR_GET_DATA_SUCCEEDED","FHIR_LOAD_SAMPLE_DATA","TOGGLE_EXAMPLE_VISIBILITY","ADD_EXAMPLE_DATA","defaultFhirDataState","byResource","patient","title","status","error","icon","conditions","familyMemberHistories","sampleDataLoaded","allResourcesLoaded","examples","getFHIRDataFailed","resourceType","type","getFHIRDataSucceeded","response","toggleExampleVisibility","exampleKey","addExampleData","key","need","phi","deidentified","getFHIRData","dispatch","getState","state","patientId","fhirAuth","client","read","id","then","today","Date","dob","data","birthDate","age","getFullYear","m","getMonth","getDate","gender","identifier","find","element","system","value","moment","subtract","format","catch","err","console","log","alert","search","observations","diabetes","entry","resource","code","coding","text","onsetDateTime","FHIR_CLIENT_ID","FHIR_REDIRECT_URI","instance","hdOAuth","Object","classCallCheck","this","scopes","redirectUri","clientId","iss","launch","authorizeUrl","tokenUrl","uuid","oauth","ClientOAuth2","authorizationUri","accessTokenUri","stateToSave","JSON","stringify","window","sessionStorage","setItem","getUri","query","aud","uri","querystring","qs","parse","params","getItem","removeItem","getToken","FHIR_SMART_INITIALIZE","FHIR_GET_METADATA","FHIR_GET_METADATA_FAILED","FHIR_GET_METADATA_SUCCEEDED","FHIR_GET_ACCESS_TOKEN","FHIR_ACCESS_TOKEN_RECEIVED","FHIR_ERROR","FHIR_SET_ISSUER","defaultFhirAuthState","credentials","redirectURI","isFetching","userFriendlyStatus","redirectToTokenUri","accessToken","fhirGetMetadata","axios","get","concat","conformance","secExtensions","rest","security","extension","ext","url","authorizeExt","tokenExt","software","name","fhirGetMetadataSucceeded","valueUri","fhirGetMetadataFailed","toString","getAccessToken","accessTokenPromise","accessTokenReceived","setTimeout","fhirError","tokenResponsePayload","description","Grid","_this","react_default","a","createElement","Fragment","Step","Group","size","fluid","completed","props","Icon","Content","Title","Description","keys","fhirData","map","resourceKey","Loader","active","inline","Table","celled","definition","Header","Row","HeaderCell","width","Body","itemKey","item","Cell","collapsing","Checkbox","toggle","onClick","hidden","style","float","Component","connect","ownProps","Redirect","location","href","Container","paddingTop","Message","negative","Divider","Button","basic","as","Link","to","components_Grid","Launch","slice","initializeSmart","setProps","getTokenRedirectUri","NotFound","App","Menu","inverted","color","attached","Item","header","Switch","Route","path","exact","render","target","rel","loadSampleData","labelPosition","component","withRouter","rootReducer","combineReducers","arguments","length","undefined","action","objectSpread","dummy","config","baseUrl","auth","bearer","fhir","expires","mrn","hdl","radiation","defineProperty","some","info","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","Boolean","hostname","match","store","createStore","applyMiddleware","thunk","ReactDOM","es","BrowserRouter","src_components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9a57cc2f.chunk.js","sourcesContent":["import moment from \"moment\";\n\n/***** Actions *****/\nexport const FHIR_GET_DATA = \"FHIR/GET_DATA\";\nconst FHIR_GET_DATA_FAILED = \"FHIR/GET_DATA_FAILED\";\nconst FHIR_GET_DATA_SUCCEEDED = \"FHIR/GET_DATA_SUCCEEDED\";\nexport const FHIR_LOAD_SAMPLE_DATA = \"FHIR/LOAD_SAMPLE_DATA\";\n\nconst TOGGLE_EXAMPLE_VISIBILITY = \"TOGGLE_EXAMPLE_VISIBILITY\";\n\nconst ADD_EXAMPLE_DATA = \"ADD_EXAMPLE_DATA\";\n\n/***** Reducers *****/\nconst defaultFhirDataState = {\n  byResource: {\n    patient: { title: \"Patient\", status: \"\", error: null, icon: \"male\" },\n    conditions: {\n      title: \"Conditions\",\n      status: \"\",\n      error: null,\n      icon: \"numbered list\"\n    },\n    // observations: Immutable.Map({title: \"Observations\", status: \"\", error: null, icon: \"lab\"}),\n    familyMemberHistories: {\n      title: \"Family Member History\",\n      status: \"\",\n      error: null,\n      icon: \"numbered list\"\n    }\n  },\n\n  sampleDataLoaded: false,\n\n  allResourcesLoaded: false,\n\n  // This will contain data as\n  //    {phi: \"\", deidentified: \"\", title: \"MRN\", need: \"Medical Record Number\", hidden: true}\n  examples: {\n    // mrn: {phi: \"s123\", deidentified: \"123123\", title: \"MRN\", hidden: true},\n    // dob: {phi: \"asdasdsa\", deidentified: \"123123\", title: \"Date of Birth\", hidden: true}\n  }\n};\n\nexport function fhirDataReducer(state = defaultFhirDataState, action) {\n  switch (action.type) {\n    case FHIR_LOAD_SAMPLE_DATA:\n      return {\n        ...state,\n        sampleDataLoaded: true,\n        allResourcesLoaded: true,\n        byResource: {\n          patient: {\n            ...state.byResource.patient,\n            status: \"loaded\",\n            error: null\n          },\n          conditions: {\n            ...state.byResource.conditions,\n            status: \"loaded\",\n            error: null\n          },\n          familyMemberHistories: {\n            ...state.byResource.familyMemberHistories,\n            status: \"loaded\",\n            error: null\n          }\n        },\n        examples: {\n          gender: {\n            need: \"Gender\",\n            title: \"Gender\",\n            phi: \"male\",\n            deidentified: \"male\",\n            hidden: true\n          },\n          dob: {\n            need: \"Age\",\n            title: \"Date of Birth\",\n            phi: moment()\n              .subtract(48, \"years\")\n              .format(\"YYYY-MM-DD\"),\n            deidentified: \"48 year old\",\n            hidden: true\n          },\n          mrn: {\n            need: \"Unique key\",\n            title: \"Medical Record Number\",\n            phi: \"E83833\",\n            deidentified: 'May be possible with \"Expert Determination\" method',\n            hidden: true\n          },\n          hdl: {\n            need: \"HDL within the last six months\",\n            title: \"HDL Observation\",\n            phi:\n              \"38 mg/dL measured on \" +\n              moment()\n                .subtract(2, \"months\")\n                .format(\"YYYY-MM-DD\"),\n            deidentified: \"38 mg/dL\",\n            hidden: true\n          },\n          radiation: {\n            need: \"Past chest radiation?\",\n            title: \"Radiation\",\n            phi:\n              \"Chest radiation on \" +\n              moment()\n                .subtract(9, \"years\")\n                .format(\"YYYY-MM-DD\"),\n            deidentified: \"No\",\n            hidden: true\n          },\n          diabetes: {\n            need: \"Is diabetic?\",\n            title: \"Diabetes Condition\",\n            phi:\n              \"Type 1 diabetes mellitus (CMS/HCC) with onset date 2010-08-17\",\n            deidentified: \"Has diabetes, ignore the onset date\",\n            hidden: true\n          }\n        }\n      };\n\n    case FHIR_GET_DATA:\n      return {\n        ...state,\n        allResourcesLoaded: false,\n        byResource: {\n          ...state.byResource,\n          [action.resourceType]: {\n            ...state.byResource[action.resourceType],\n            error: null,\n            status: \"loading\"\n          }\n        }\n      };\n\n    case FHIR_GET_DATA_FAILED:\n      return {\n        ...state,\n        byResource: {\n          ...state.byResource,\n          [action.resourceType]: {\n            ...state.byResource[action.resourceType],\n            error: action.error,\n            status: \"failed\"\n          }\n        }\n      };\n\n    case FHIR_GET_DATA_SUCCEEDED:\n      let allResourcesLoaded = !Object.keys(state.byResource).some(\n        resourceType => {\n          return resourceType === action.resourceType\n            ? false\n            : state.byResource[resourceType].status !== \"loaded\";\n        }\n      );\n      return {\n        ...state,\n        allResourcesLoaded: allResourcesLoaded,\n        byResource: {\n          ...state.byResource,\n          [action.resourceType]: {\n            ...state.byResource[action.resourceType],\n            error: null,\n            status: \"loaded\"\n          }\n        }\n      };\n\n    case ADD_EXAMPLE_DATA:\n      let info = {\n        need: action.need,\n        title: action.title,\n        phi: action.phi,\n        deidentified: action.deidentified,\n        hidden: true\n      };\n      return {\n        ...state,\n        examples: { ...state.examples, [action.key]: info }\n      };\n\n    case TOGGLE_EXAMPLE_VISIBILITY:\n      return {\n        ...state,\n        examples: {\n          ...state.examples,\n          [action.exampleKey]: {\n            ...state.examples[action.exampleKey],\n            hidden: !state.examples[action.exampleKey].hidden\n          }\n        }\n      };\n\n    default:\n      return state;\n  }\n}\n\n/***** Action Creators *****/\nconst getFHIRDataFailed = resourceType => ({\n  type: FHIR_GET_DATA_FAILED,\n  resourceType\n});\nconst getFHIRDataSucceeded = (resourceType, response) => ({\n  type: FHIR_GET_DATA_SUCCEEDED,\n  resourceType,\n  response\n});\n\nexport const loadSampleData = () => dispatch => {\n  dispatch({ type: FHIR_LOAD_SAMPLE_DATA });\n};\n\nexport const toggleExampleVisibility = exampleKey => ({\n  type: TOGGLE_EXAMPLE_VISIBILITY,\n  exampleKey\n});\n\nexport const addExampleData = (key, need, title, phi, deidentified) => ({\n  type: ADD_EXAMPLE_DATA,\n  key,\n  need,\n  phi,\n  deidentified,\n  title\n});\n\nexport const getFHIRData = resourceType => (dispatch, getState) => {\n  dispatch({ type: FHIR_GET_DATA, resourceType });\n\n  let state = getState();\n  let patientId = state.fhirAuth.patientId;\n  let client = state.fhirAuth.client;\n\n  if (resourceType === \"patient\") {\n    client\n      .read({ type: \"Patient\", id: patientId })\n      .then(response => {\n        // Calculate age\n        let today = new Date();\n        let dob = response.data.birthDate;\n        let birthDate = new Date(dob);\n        let age = today.getFullYear() - birthDate.getFullYear();\n        var m = today.getMonth() - birthDate.getMonth();\n        if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n          age--;\n        }\n\n        if (age >= 90) {\n          age = \"Greater than 90\";\n        } else {\n          age = age + \" year old\";\n        }\n\n        dispatch(\n          addExampleData(\n            \"gender\",\n            \"Gender\",\n            \"Gender\",\n            response.data.gender,\n            response.data.gender\n          )\n        );\n        dispatch(\n          addExampleData(\n            \"dob\",\n            \"Age\",\n            \"Date of Birth\",\n            response.data.birthDate,\n            age\n          )\n        );\n        dispatch(\n          addExampleData(\n            \"mrn\",\n            \"Unique key\",\n            \"MRN\",\n            response.data.identifier.find(\n              element =>\n                element.system ===\n                \"urn:oid:1.2.840.114350.1.13.0.1.7.5.737384.0\"\n            ).value,\n            'May be possible with \"Expert Determination\" method'\n          )\n        );\n        dispatch(\n          addExampleData(\n            \"hdl\",\n            \"HDL within the last six months\",\n            \"HDL Observation\",\n            \"38 mg/dL measured on \" +\n              moment()\n                .subtract(2, \"months\")\n                .format(\"YYYY-MM-DD\"),\n            \"38 mg/dL\"\n          )\n        );\n        dispatch(\n          addExampleData(\n            \"radiation\",\n            \"Past chest radiation?\",\n            \"Radiation\",\n            \"Chest radiation on \" +\n              moment()\n                .subtract(9, \"years\")\n                .format(\"YYYY-MM-DD\"),\n            \"No\"\n          )\n        );\n        dispatch(getFHIRDataSucceeded(resourceType, response));\n      })\n      .catch(err => {\n        console.log(\"Error!\");\n        console.log(err);\n        dispatch(getFHIRDataFailed(resourceType));\n      });\n  } else if (\n    resourceType === \"conditions\" ||\n    resourceType === \"observations\" ||\n    resourceType === \"familyMemberHistories\"\n  ) {\n    let typeMap = {\n      conditions: \"Condition\",\n      observations: \"Observation\",\n      familyMemberHistories: \"FamilyMemberHistory\"\n    };\n    client\n      .search({ type: typeMap[resourceType], patient: patientId })\n      .then(response => {\n        // For conditions, check diabetes\n        if (resourceType === \"conditions\") {\n          let diabetes = response.data.entry.find(\n            element =>\n              typeof element.resource.code.coding.find(\n                code =>\n                  code.system === \"http://snomed.info/sct\" &&\n                  code.code === \"46635009\"\n              ) !== \"undefined\"\n          );\n          // console.log(diabetes);\n          if (diabetes !== null) {\n            dispatch(\n              addExampleData(\n                \"diabetes\",\n                \"Is diabetic?\",\n                \"Diabetes Condition\",\n                diabetes.resource.code.text +\n                  \" with onset date \" +\n                  diabetes.resource.onsetDateTime,\n                \"Has diabetes, ignore the onset date\"\n              )\n            );\n            dispatch(getFHIRDataSucceeded(resourceType, response));\n          } else {\n            dispatch(getFHIRDataSucceeded(resourceType, response));\n          }\n        } else {\n          dispatch(getFHIRDataSucceeded(resourceType, response));\n        }\n      })\n      .catch(err => {\n        console.log(\"Error!\");\n        console.log(err);\n        return dispatch(getFHIRDataFailed(resourceType));\n      });\n  } else {\n    alert(\"Unexpected resource type requested '\" + resourceType + \"'.\");\n    return dispatch(getFHIRDataFailed(resourceType));\n  }\n};\n","// TODO: Please populate the following variables.\n\n// Set to your client ID.\nexport const FHIR_CLIENT_ID = null;\n// export const FHIR_CLIENT_ID = \"f35e7dfe-6f15-478b-be43-5326a997e027\";\n\n// Set to something like \"https://localhost/fhir/epic/redirect\".  If using HTTPS without a valid domain\n// name (e.g. localhost) then first visit the root URL to ignore the security notice.\nexport const FHIR_REDIRECT_URI = null;\n// export const FHIR_REDIRECT_URI = \"https://windows-10/fhir/epic/redirect\";","import ClientOAuth2 from \"client-oauth2\";\nimport qs from \"qs\";\nimport uuid from \"uuid/v4\";\nimport { FHIR_CLIENT_ID, FHIR_REDIRECT_URI } from \"../credentials.js\";\n\nlet instance = null;\n\n// This class encapsulates the OAuth functionality.\nexport default class hdOAuth {\n  constructor() {\n    if (instance) {\n      return instance;\n    }\n\n    this.scopes = [\"launch\", \"openid profile\", \"patient/*.read\"];\n    this.redirectUri = FHIR_REDIRECT_URI;\n    this.clientId = FHIR_CLIENT_ID;\n    instance = this;\n  }\n\n  // Sets the given properties on this object and saves it in the session storage.\n  setProps(iss, launch, authorizeUrl, tokenUrl) {\n    this.iss = iss;\n    this.launch = launch;\n    this.authorizeUrl = authorizeUrl;\n    this.tokenUrl = tokenUrl;\n    this.state = uuid();\n\n    this.oauth = new ClientOAuth2({\n      clientId: this.clientId,\n      authorizationUri: authorizeUrl,\n      accessTokenUri: tokenUrl,\n      redirectUri: this.redirectUri,\n      state: this.state,\n      scopes: this.scopes\n    });\n\n    // Save the parameters in session storage\n    let stateToSave = JSON.stringify({ iss, authorizeUrl, tokenUrl });\n    window.sessionStorage.setItem(this.state, stateToSave);\n  }\n\n  getTokenRedirectUri() {\n    let uri = this.oauth.code.getUri({\n      query: { aud: this.iss, launch: this.launch }\n    });\n    return uri;\n  }\n\n  // Initializes the request to get a token. This will return a null if the expected data\n  // is not found in the session storage.  Otherwise, it will return a promise that will\n  // return the access token.\n  getAccessToken(uri) {\n    let querystring = qs.parse(uri);\n    let params = window.sessionStorage.getItem(querystring.state);\n    if (params === null) {\n      return null;\n    }\n    params = JSON.parse(params);\n    window.sessionStorage.removeItem(querystring.state);\n    this.iss = params.iss;\n    this.authorizeUrl = params.authorizeUrl;\n    this.tokenUrl = params.tokenUrl;\n\n    this.oauth = new ClientOAuth2({\n      clientId: this.clientId,\n      authorizationUri: this.authorizeUrl,\n      accessTokenUri: this.tokenUrl,\n      redirectUri: this.redirectUri,\n      scopes: this.scopes\n    });\n\n    return this.oauth.code.getToken(uri);\n  }\n}\n","import hdOAuth from \"../lib/oauth.js\";\nimport fhir from \"fhir.js\";\nimport { FHIR_CLIENT_ID, FHIR_REDIRECT_URI } from \"../credentials.js\";\nimport {\n  getFHIRData,\n  FHIR_GET_DATA,\n  FHIR_LOAD_SAMPLE_DATA\n} from \"./fhir-data.js\";\nimport axios from \"axios\";\n\n/***** Actions *****/\nconst FHIR_SMART_INITIALIZE = \"FHIR/SMART_INITIALIZE\";\n\nconst FHIR_GET_METADATA = \"FHIR/GET_METADATA\";\nconst FHIR_GET_METADATA_FAILED = \"FHIR/GET_METADATA_FAILED\";\nconst FHIR_GET_METADATA_SUCCEEDED = \"FHIR/GET_METADATA_SUCCEEDED\";\n\nconst FHIR_GET_ACCESS_TOKEN = \"FHIR/GET_ACCESS_TOKEN\";\nconst FHIR_ACCESS_TOKEN_RECEIVED = \"FHIR/ACCESS_TOKEN_RECEIVED\";\n\nconst FHIR_ERROR = \"FHIR/ERROR\";\n\n// Used to set the basic SMART/FHIR properties.\nconst FHIR_SET_ISSUER = \"FHIR/SET_ISSUER\";\n\n// Sent if the redirection page was loaded and no existing\n// session was found.\n// const FHIR_SESSION_NOT_FOUND = 'FHIR_SESSION_NOT_FOUND';\n\n/***** Reducers *****/\nconst defaultFhirAuthState = {\n  credentials: { clientId: FHIR_CLIENT_ID, redirectURI: FHIR_REDIRECT_URI },\n  isFetching: false,\n  iss: null,\n  launch: null,\n  authorizeUrl: null,\n  tokenUrl: null,\n  userFriendlyStatus: \"Waiting...\",\n\n  // This is set to instruct the launch component to redirect the user to the Token URI.\n  redirectToTokenUri: false,\n\n  error: null,\n  accessToken: null,\n  patientId: null,\n\n  // Reference to the initialized FHIR.js client.\n  client: null\n};\n\nexport function fhirAuthReducer(state = defaultFhirAuthState, action) {\n  switch (action.type) {\n    case FHIR_LOAD_SAMPLE_DATA:\n      return { ...state, accessToken: { dummy: true } };\n\n    case FHIR_SMART_INITIALIZE:\n      return {\n        ...state,\n        iss: action.iss,\n        launch: action.launch,\n        userFriendlyStatus: \"Initializing...\"\n      };\n\n    case FHIR_SET_ISSUER:\n      return { ...state, iss: action.iss };\n\n    case FHIR_ERROR:\n      return {\n        ...state,\n        error: { code: action.code, description: action.description }\n      };\n\n    case FHIR_GET_METADATA:\n      return {\n        ...state,\n        isFetching: true,\n        accessToken: null,\n        userFriendlyStatus: \"Fetching metadata...\"\n      };\n\n    case FHIR_GET_METADATA_SUCCEEDED:\n      return {\n        ...state,\n        isFetching: false,\n        authorizeUrl: action.authorizeUrl,\n        tokenUrl: action.tokenUrl,\n        redirectToTokenUri: true,\n        userFriendlyStatus: \"Redirecting...\",\n        accessToken: null,\n        error: null\n      };\n\n    case FHIR_GET_METADATA_FAILED:\n      return { ...state, isFetching: false, error: action.error };\n\n    case FHIR_GET_ACCESS_TOKEN:\n      return state;\n    // return state.set(\"isFetching\", true)\n    //   .set(\"accessToken\", null)\n    //   .set(\"userFriendlyStatus\", \"Fetching metadata...\");\n\n    case FHIR_ACCESS_TOKEN_RECEIVED:\n      // console.log(action.tokenResponsePayload);\n      let response = action.tokenResponsePayload;\n      let config = {\n        baseUrl: state.iss,\n        auth: { bearer: response.accessToken }\n      };\n      let client = fhir(config);\n\n      return {\n        ...state,\n        isFetching: false,\n        userFriendlyStatus: \"Access token received...\",\n        error: null,\n        patientId: response.data.patient,\n        client: client,\n        accessToken: { expires: response.expires, data: response.data }\n      };\n\n    case FHIR_GET_DATA:\n      return { ...state, userFriendlyStatus: \"Getting data...\" };\n\n    default:\n      return state;\n  }\n}\n\n/***** Action Creators *****/\nexport const initializeSmart = (iss, launch) => dispatch => {\n  dispatch({ type: FHIR_SMART_INITIALIZE, iss, launch });\n  dispatch(fhirGetMetadata(iss));\n};\n// const fhirError = (message) => ({ type: FHIR_ERROR, message });\n\nconst fhirGetMetadata = iss => (dispatch, getState) => {\n  dispatch({ type: FHIR_GET_METADATA, iss });\n\n  axios\n    .get(`${iss}/metadata`)\n    .then(response => {\n      // Get the authorize and token URLs.\n      // TODO: Add error checking.\n      let conformance = response.data;\n      let secExtensions = conformance.rest[0].security.extension.find(\n        ext =>\n          ext.url ===\n          \"http://fhir-registry.smarthealthit.org/StructureDefinition/oauth-uris\"\n      ).extension;\n      let authorizeExt = secExtensions.find(ext => ext.url === \"authorize\");\n      let tokenExt = secExtensions.find(ext => ext.url === \"token\");\n\n      // Find out the EHR.\n      if (\n        conformance.software &&\n        conformance.software.name &&\n        conformance.software.name === \"Fnd 2018\"\n      ) {\n        window.sessionStorage.setItem(\"ehr\", \"Epic\");\n      } else {\n        window.sessionStorage.setItem(\"ehr\", \"Unknown\");\n      }\n\n      dispatch(\n        fhirGetMetadataSucceeded(authorizeExt.valueUri, tokenExt.valueUri)\n      );\n    })\n    .catch(error => {\n      dispatch(fhirGetMetadataFailed(error.toString()));\n    });\n};\nconst fhirGetMetadataSucceeded = (authorizeUrl, tokenUrl) => ({\n  type: FHIR_GET_METADATA_SUCCEEDED,\n  authorizeUrl,\n  tokenUrl\n});\nconst fhirGetMetadataFailed = error => ({\n  type: FHIR_GET_METADATA_FAILED,\n  error\n});\n\nconst setIssuer = iss => ({ type: FHIR_SET_ISSUER, iss });\n\nexport const getAccessToken = uri => (dispatch, getState) => {\n  dispatch({ type: FHIR_GET_ACCESS_TOKEN, uri });\n\n  let oauth = new hdOAuth();\n  let accessTokenPromise = oauth.getAccessToken(uri);\n\n  if (accessTokenPromise === null) {\n    dispatch(\n      fhirError(\"FHIR_AT_1\", \"Could not request token, missing FHIR session.\")\n    );\n    return;\n  }\n\n  accessTokenPromise.then(response => {\n    dispatch(setIssuer(oauth.iss));\n    dispatch(accessTokenReceived(response));\n    dispatch(getFHIRData(\"patient\"));\n    setTimeout(() => {\n      dispatch(getFHIRData(\"conditions\"));\n    }, 100);\n    setTimeout(() => {\n      dispatch(getFHIRData(\"familyMemberHistories\"));\n    }, 200);\n    // dispatch(getFHIRData(\"patient\"));\n    // dispatch(getFHIRData(\"conditions\"));\n    // dispatch(getFHIRData(\"familyMemberHistories\"));\n    // dispatch(getFHIRData(\"observations\"));\n  });\n\n  // TODO: handle errors?\n  // .catch((err) => {\n  //   // TODO: Properly handle this.\n  //   console.log(err);\n  //   console.log(\"error!\");\n  // });\n};\nconst accessTokenReceived = tokenResponsePayload => ({\n  type: FHIR_ACCESS_TOKEN_RECEIVED,\n  tokenResponsePayload\n});\n\n// Used to signify an error.\nconst fhirError = (code, description) => ({\n  type: FHIR_ERROR,\n  code,\n  description\n});\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getAccessToken } from \"modules/fhir-auth.js\";\nimport { toggleExampleVisibility } from \"modules/fhir-data.js\";\nimport { Icon, Step, Table, Checkbox, Loader } from \"semantic-ui-react\";\n\nconst mapStateToProps = (state, ownProps) => ({\n  fhirAuth: state.fhirAuth,\n  fhirData: state.fhirData\n});\nconst mapDispatchToProps = dispatch => ({\n  getAccessToken: uri => dispatch(getAccessToken(uri)),\n  toggleExampleVisibility: exampleKey =>\n    dispatch(toggleExampleVisibility(exampleKey))\n});\n\nclass Grid extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Step.Group size=\"mini\" fluid>\n          <Step completed={this.props.fhirAuth.accessToken !== null}>\n            <Icon name=\"address card\" />\n            <Step.Content>\n              <Step.Title>Get Access Token</Step.Title>\n              <Step.Description>\n                {this.props.fhirAuth.accessToken === null\n                  ? \"Retrieving...\"\n                  : \"Retrieved\"}\n              </Step.Description>\n            </Step.Content>\n          </Step>\n\n          {Object.keys(this.props.fhirData.byResource).map(resourceKey => {\n            let resource = this.props.fhirData.byResource[resourceKey];\n            return (\n              <Step key={resourceKey} completed={resource.status === \"loaded\"}>\n                <Icon name={resource.icon} />\n                <Step.Content>\n                  <Step.Title>{resource.title}</Step.Title>\n                  <Step.Description>\n                    {resource.status === \"loading\" && (\n                      <React.Fragment>\n                        <Loader size=\"mini\" active inline />\n                        &nbsp;Retrieving...\n                      </React.Fragment>\n                    )}\n                    {resource.status === \"loaded\" && \"Retrieved\"}\n                    {resource.status === \"failed\" && \"Failed\"}\n                  </Step.Description>\n                </Step.Content>\n              </Step>\n            );\n          })}\n        </Step.Group>\n\n        {this.props.fhirData.allResourcesLoaded && (\n          <React.Fragment>\n            <h2>Examples</h2>\n            <Table celled definition size=\"small\">\n              <Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell />\n                  <Table.HeaderCell width=\"four\">\n                    Application Need\n                  </Table.HeaderCell>\n                  <Table.HeaderCell>FHIR Data Point</Table.HeaderCell>\n                  <Table.HeaderCell>PHI</Table.HeaderCell>\n                  <Table.HeaderCell width=\"four\">\n                    Possible De-identification\n                  </Table.HeaderCell>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                {Object.keys(this.props.fhirData.examples).map(itemKey => {\n                  let item = this.props.fhirData.examples[itemKey];\n                  return (\n                    <Table.Row key={itemKey}>\n                      <Table.Cell collapsing>\n                        <Checkbox\n                          toggle\n                          size=\"mini\"\n                          onClick={() =>\n                            this.props.toggleExampleVisibility(itemKey)\n                          }\n                        />\n                      </Table.Cell>\n                      <Table.Cell>{item.need}</Table.Cell>\n                      <Table.Cell>{item.title}</Table.Cell>\n                      <Table.Cell>{item.phi}</Table.Cell>\n                      <Table.Cell>\n                        {item.hidden ? (\n                          <React.Fragment>******</React.Fragment>\n                        ) : (\n                          <React.Fragment>\n                            {item.deidentified}\n                            {itemKey === \"radiation\" && (\n                              <React.Fragment>\n                                <sup style={{ float: \"right\" }}>\n                                  * No Observations within the last 5 years\n                                </sup>\n                              </React.Fragment>\n                            )}\n                            {itemKey === \"dob\" && (\n                              <React.Fragment>\n                                <sup style={{ float: \"right\" }}>\n                                  * for &gt;=90 assume 90\n                                </sup>\n                              </React.Fragment>\n                            )}\n                          </React.Fragment>\n                        )}\n                      </Table.Cell>\n                    </Table.Row>\n                  );\n                })}\n              </Table.Body>\n            </Table>\n          </React.Fragment>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Grid);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { getAccessToken } from \"modules/fhir-auth.js\";\nimport { toggleExampleVisibility } from \"modules/fhir-data.js\";\nimport { Icon, Message, Divider, Button, Container } from \"semantic-ui-react\";\nimport Grid from \"./Grid.js\";\n\nconst mapStateToProps = (state, ownProps) => ({\n  fhirAuth: state.fhirAuth,\n  fhirData: state.fhirData\n});\nconst mapDispatchToProps = dispatch => ({\n  getAccessToken: uri => dispatch(getAccessToken(uri)),\n  toggleExampleVisibility: exampleKey =>\n    dispatch(toggleExampleVisibility(exampleKey))\n});\n\nclass Redirect extends Component {\n  componentDidMount() {\n    this.props.getAccessToken(window.location.href);\n  }\n\n  render() {\n    let fhirAuth = this.props.fhirAuth;\n\n    if (fhirAuth.error !== null) {\n      return (\n        <Container style={{ paddingTop: \"10px\" }}>\n          <Message negative icon>\n            <Icon name=\"warning sign\" />\n            <Message.Content>\n              <Message.Header>Error</Message.Header>\n              <div>{fhirAuth.error.description}</div>\n              <Divider />\n              <Button basic as={Link} size=\"small\" to=\"/\">\n                &lt; Home\n              </Button>\n            </Message.Content>\n          </Message>\n        </Container>\n      );\n    }\n\n    return <Grid />;\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Redirect);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { initializeSmart } from \"modules/fhir-auth.js\";\nimport qs from \"qs\";\nimport hdOAuth from \"lib/oauth.js\";\nimport { Loader } from \"semantic-ui-react\";\n\nconst mapStateToProps = (state, ownProps) => ({\n  fhirAuth: state.fhirAuth\n});\nconst mapDispatchToProps = dispatch => ({\n  initializeSmart: (iss, launch) => dispatch(initializeSmart(iss, launch))\n});\n\nclass Launch extends Component {\n  componentDidMount() {\n    // Get the issuer from the URL.\n    let querystring = qs.parse(window.location.search.slice(1));\n    if (typeof querystring.iss === \"undefined\") {\n      alert(\"Issuer not specified. Aborting.\");\n      window.location = \"/\";\n      return;\n    }\n\n    if (typeof querystring.launch === \"undefined\") {\n      alert(\"Launch code not specified. Aborting.\");\n      window.location = \"/\";\n      return;\n    }\n\n    this.props.initializeSmart(querystring.iss, querystring.launch);\n  }\n\n  render() {\n    // Redirect to the token URI if appropriate.\n    let fhirAuth = this.props.fhirAuth;\n    if (fhirAuth.redirectToTokenUri === true) {\n      let oauth = new hdOAuth();\n      oauth.setProps(\n        fhirAuth.iss,\n        fhirAuth.launch,\n        fhirAuth.authorizeUrl,\n        fhirAuth.tokenUrl\n      );\n      window.location = oauth.getTokenRedirectUri();\n    }\n\n    if (fhirAuth.error !== null) {\n      return <div>Error: {fhirAuth.error}</div>;\n    }\n\n    return (\n      <Loader active inline=\"centered\">\n        {this.props.fhirAuth.userFriendlyStatus}\n      </Loader>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Launch);\n","import React, { Component } from \"react\";\nimport { Button, Icon } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\n\nexport default class NotFound extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <h1>404 - Page not found</h1>\n        <pre>{window.location.href}</pre>\n        <Button as={Link} to=\"/\">\n          <Icon name=\"home\" /> Home\n        </Button>\n      </React.Fragment>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Switch, Route, withRouter } from \"react-router-dom\";\nimport { Menu, Button, Container, Message, Divider, Icon } from \"semantic-ui-react\";\nimport { loadSampleData } from \"modules/fhir-data.js\";\nimport { connect } from \"react-redux\";\n\nimport Redirect from \"./Redirect.js\";\nimport Launch from \"./Launch.js\";\nimport NotFound from \"./NotFound.js\";\nimport Grid from \"./Grid.js\";\n\nconst mapStateToProps = state => ({\n  sampleDataLoaded: state.fhirData.sampleDataLoaded,\n  credentials: state.fhirAuth.credentials\n});\nconst mapDispatchToProps = dispatch => ({\n  loadSampleData: () => dispatch(loadSampleData())\n});\n\nclass App extends Component {\n  render() {\n    let credentials = this.props.credentials;\n\n    return (\n      <React.Fragment>\n        <Menu inverted color=\"red\" attached>\n          <Menu.Item header>HealthDecision &ndash; Browser-Based FHIR Integration</Menu.Item>\n        </Menu>\n        <Container style={{ paddingTop: \"10px\" }}>\n          <Switch>\n            <Route\n              path=\"/\"\n              exact\n              render={() => {\n                if (this.props.sampleDataLoaded === true) {\n                  return (\n                    <React.Fragment>\n                      <h3>Sample Data</h3>\n                      <Grid />\n                    </React.Fragment>\n                  );\n                }\n\n                return (\n                  <React.Fragment>\n                    <h3>Root URL</h3>\n                    <div>\n                      {(credentials.clientId === null ||\n                        credentials.clientId === \"\" ||\n                        credentials.redirectURI === null ||\n                        credentials.redirectURI === \"\") && (\n                        <Message error>\n                          <Message.Header>Configuration Error</Message.Header>\n                          <ul>\n                            {(credentials.clientId === null || credentials.clientId === \"\") && (\n                              <li>clientID is missing.</li>\n                            )}\n                            {(credentials.redirectURI === null || credentials.redirectURI === \"\") && (\n                              <li>redirectURI is missing.</li>\n                            )}\n                          </ul>\n                          <p>Please set in credentials.js.</p>\n                        </Message>\n                      )}\n                      Note that there is nothing at the root URL. This app must be called from{\" \"}\n                      <a href=\"https://apporchard.epic.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n                        Epic App Orchard Simulator\n                      </a>{\" \"}\n                      (or Epic Hyperspace) using the SMART launch workflow.\n                      <br />\n                      <Divider />\n                      <Button icon onClick={this.props.loadSampleData} labelPosition=\"left\">\n                        <Icon name=\"microchip\" /> Load Sample Data\n                      </Button>\n                      {/* <a target=\"_blank\" rel=\"noopener noreferrer\"\n                      href=\"https://launch.smarthealthit.org/?auth_error=&fhir_version_1=r2&fhir_version_2=r2&iss=&launch_ehr=1&launch_url=http%3A%2F%2Flocalhost%3A3000%2F%23%2Flaunch&patient=6638c5fe-0e89-442f-a970-2228d61b141c&prov_skip_auth=1&prov_skip_login=1&provider=SMART-1234&pt_skip_auth=1&public_key=&sb=&sde=&sim_ehr=1&token_lifetime=15&user_pt=\"\n                      >Sample</a> */}\n                    </div>\n                  </React.Fragment>\n                );\n              }}\n            />\n            <Route path=\"/fhir/epic/launch\" exact component={Launch} />\n            <Route path=\"/fhir/epic/redirect\" exact component={Redirect} />\n            <Route path=\"*\" component={NotFound} />\n          </Switch>\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(App)\n);\n","import { combineReducers } from \"redux\";\nimport { fhirAuthReducer } from \"modules/fhir-auth.js\";\nimport { fhirDataReducer } from \"modules/fhir-data.js\";\n\nconst rootReducer = combineReducers({\n  fhirAuth: fhirAuthReducer,\n  fhirData: fhirDataReducer\n});\n\nexport default rootReducer;\n","import { compose, createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"reducers.js\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default function configureStore() {\n  const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\n  return store;\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"react-app-polyfill/ie11\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"components/index.css\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport App from \"components/App\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n// import { HashRouter as Router } from 'react-router-dom';\nimport configureStore from \"configureStore\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nlet store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}